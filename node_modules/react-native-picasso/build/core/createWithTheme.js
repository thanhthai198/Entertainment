"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const deepmerge_1 = __importDefault(require("deepmerge"));
const hoist_non_react_statics_1 = __importDefault(require("hoist-non-react-statics"));
const createWithTheme = (ThemeContext) => {
    const withTheme = (WrappedComponent) => {
        const Enhance = (props) => {
            let _previous;
            const _merge = (a, b) => {
                const previous = _previous;
                if (previous && previous.a === a && previous.b === b) {
                    return previous.result;
                }
                const result = a && b && a !== b ? deepmerge_1.default(a, b) : a || b;
                _previous = { a, b, result };
                return result;
            };
            const { ref } = props, rest = __rest(props, ["ref"]);
            return (<ThemeContext.Consumer>
          {(theme) => (<WrappedComponent {...rest} theme={_merge(theme, rest.theme)} ref={ref}/>)}
        </ThemeContext.Consumer>);
        };
        const ResultComponent = React.forwardRef((props, ref) => (<Enhance {...props} theme={props.theme} ref={ref}/>));
        ResultComponent.displayName = `withTheme(${WrappedComponent.displayName || WrappedComponent.name})`;
        const FinalComponent = hoist_non_react_statics_1.default(ResultComponent, WrappedComponent);
        return FinalComponent;
    };
    return withTheme;
};
exports.default = createWithTheme;
