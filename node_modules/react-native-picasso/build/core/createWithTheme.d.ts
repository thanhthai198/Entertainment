import * as React from 'react';
import hoistNonReactStatics from 'hoist-non-react-statics';
import { Theme } from '../styles/defaultTheme';
import { TouchableOpacityProps } from 'react-native';
interface CProps extends TouchableOpacityProps {
    className?: string;
    theme: Theme;
    ref: React.ForwardedRef<any>;
}
declare const createWithTheme: (ThemeContext: React.Context<Theme>) => (WrappedComponent: React.FC<any>) => React.ForwardRefExoticComponent<Pick<CProps, "style" | "className" | "theme" | "activeOpacity" | "delayLongPress" | "delayPressIn" | "delayPressOut" | "disabled" | "hitSlop" | "onBlur" | "onFocus" | "onLayout" | "onLongPress" | "onPress" | "onPressIn" | "onPressOut" | "pressRetentionOffset" | "testID" | "hasTVPreferredFocus" | "tvParallaxProperties" | "touchSoundDisabled" | "accessible" | "accessibilityActions" | "accessibilityLabel" | "accessibilityRole" | "accessibilityState" | "accessibilityHint" | "accessibilityValue" | "onAccessibilityAction" | "accessibilityComponentType" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityTraits" | "accessibilityViewIsModal" | "onAccessibilityEscape" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors"> & React.RefAttributes<any>> & hoistNonReactStatics.NonReactStatics<React.FC<any>, {}>;
export default createWithTheme;
